---
- name: Detect machine architecture
  ansible.builtin.set_fact:
    go_arch: "{{ [ansible_architecture] | map('extract', go_architectures) | first }}"

- name: Request latest version
  ansible.builtin.uri:
    url: https://api.github.com/repos/glasslabs/looking-glass/releases/latest
    return_content: true
  register: glass_latest
  check_mode: false
  when: "looking_glass.version is not defined or looking_glass.version == 'latest'"

- name: Detect looking glass version
  ansible.builtin.set_fact:
    glass_version: "{{ glass_latest.json.tag_name }}"
  when: "looking_glass.version is not defined or looking_glass.version == 'latest'"

- name: Set looking glass version
  ansible.builtin.set_fact:
    glass_version: "{{ looking_glass.version }}"
  when: "looking_glass.version is defined and looking_glass.version != 'latest'"

- name: Download looking-glass
  ansible.builtin.get_url:
    url: "https://github.com/glasslabs/looking-glass/releases/download/{{ glass_version }}/looking-glass_{{ glass_version }}_linux_{{ go_arch }}.tar.gz"
    dest: /home/glass/
    mode: "0644"
  register: glass_file

- name: Install packages
  ansible.builtin.apt:
    pkg:
      - git
      - xserver-xorg-video-all
      - xserver-xorg-input-all
      - xserver-xorg-core
      - xinit
      - x11-xserver-utils
      - unclutter

- name: Install Chromium
  ansible.builtin.apt:
    name: "chromium-browser={{ looking_glass.chromium_version }}"

- name: Pin Chromium version
  ansible.builtin.dpkg_selections:
    name: chromium-browser
    selection: hold

- name: Create user
  ansible.builtin.user:
    name: glass
    shell: /usr/bin/bash
    groups: adm,dialout,cdrom,audio,video,plugdev,games,users,input,netdev,spi,i2c,gpio
    create_home: true
    append: true

- name: Copy user files
  ansible.builtin.copy:
    src: home
    dest: /home/glass/
    owner: glass
    group: glass
    mode: "0644"

- name: Setup configuration
  ansible.builtin.import_tasks:
    file: configuration.yaml

- name: Get current systemd default
  ansible.builtin.command: systemctl get-default
  changed_when: false
  check_mode: false
  register: systemddefault

- name: Set default to multi-user target
  ansible.builtin.command: systemctl set-default multi-user.target
  changed_when: false
  when: "'multi-user.target' not in systemddefault.stdout"

- name: Create systemd getty directory
  ansible.builtin.file:
    path: /etc/systemd/system/getty@tty1.service.d/
    recurse: true
    state: directory

- name: Setup autologin
  ansible.builtin.template:
    src: autologin.j2
    dest: /etc/systemd/system/getty@tty1.service.d/autologin.conf
    owner: root
    group: root
    mode: "0644"

- name: Setup splashscreen
  ansible.builtin.import_tasks:
    file: splash.yaml

- name: Install looking-glass
  ansible.builtin.unarchive:
    src: "{{ glass_file.dest }}"
    dest: /usr/local/bin
    remote_src: true
    include: glass
    owner: root
    group: root
    mode: "0755"
